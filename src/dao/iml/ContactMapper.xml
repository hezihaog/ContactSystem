<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace属性是名称空间，必须唯一 -->
<mapper namespace="entity.Contact">
    <!-- resultMap标签:映射实体与表
         type属性：表示实体全路径名
         id属性：为实体与表的映射取一个任意的唯一的名字
    -->
    <resultMap id="contactResultMap" type="entity.Contact">
        <!-- id标签:映射主键属性
             result标签：映射非主键属性
             property属性:实体的属性名
             column属性：表的字段名
        -->
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="userId" column="userId" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="qq" column="qq" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="tableName">
        contact
    </sql>

    <!-- 主要字段 -->
    <sql id="contactMainColumn">
        contact.userId as 'userId', contact.id, contact.name, contact.gender, contact.age, contact.phone, contact.email, contact.qq
    </sql>

    <!-- 添加时动态的插入参数 -->
    <sql id="addParams">
        <!-- 去掉最后的逗号 -->
        <trim suffixOverrides=",">
            <if test="userId != null">
                userId,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="qq != null">
                qq,
            </if>
        </trim>
    </sql>

    <!-- 添加时动态的插入值 -->
    <sql id="addValues">
        <!-- 去掉最后的逗号 -->
        <trim suffixOverrides=",">
            <if test="userId != null">
                #{userId},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="gender != null">
                #{gender},
            </if>
            <if test="age != null">
                #{age},
            </if>
            <if test="phone != null">
                #{phone},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="qq != null">
                #{qq},
            </if>
        </trim>
    </sql>

    <!--
        insert标签：要书写insert这么一个sql语句
        id属性：为insert这么一个sql语句取一个任意唯一的名字
        parameterType:要执行的dao中的方法的参数，如果是类的话，必须使用全路径类
    -->
    <insert id="add" parameterType="entity.Contact">
        INSERT INTO
        <include refid="tableName"/>
        (<include refid="addParams"/>) VALUES(<include refid="addValues"/>)
    </insert>

    <update id="update" parameterType="map">
        UPDATE
        <include refid="tableName"/>
        <set>
            <if test="name != null">
                NAME = #{name},
            </if>
            <if test="name != null">
                gender = #{gender},
            </if>
            <if test="name != null">
                age = #{age},
            </if>
            <if test="name != null">
                phone = #{phone},
            </if>
            <if test="name != null">
                email = #{email},
            </if>
            <if test="name != null">
                qq = #{qq},
            </if>
        </set>
        where contact.userId = #{userId} and id = #{id}
    </update>

    <!-- 删除指定联系人的单个联系人id -->
    <delete id="delete" parameterType="map">
        DELETE FROM
        <include refid="tableName"/>
        where contact.userId = #{userId} and contact.id = #{contactId}
    </delete>

    <!-- 查找指定用户的指定联系人id的联系人 -->
    <select id="findById" parameterType="map" resultType="entity.Contact">
        SELECT
        <include refid="contactMainColumn"/>
        FROM
        <include refid="tableName"/>
        WHERE contact.userId = #{userId} and contact.id = #{contactId}
    </select>

    <!-- 查找指定用户的指定联系人姓名的联系人 -->
    <select id="findByName" parameterType="map" resultType="entity.Contact">
        SELECT
        <include refid="contactMainColumn"/>
        FROM
        <include refid="tableName"/>
        c
        <where>
            <if test="userId != null">
                my_user.id = #{userId}
            </if>
            <if test="contactName != null">
                and c.name = #{contactName}
            </if>
        </where>
    </select>

    <!-- 指定一个用户名和指定的用户名，查询该用户下是否已经存在了 -->
    <select id="checkIsExist" parameterType="entity.Contact" resultType="int">
        SELECT id FROM
        <include refid="tableName"/>
        c WHERE c.userId = #{userId} and c.name = #{name}
    </select>

    <!-- 查询指定用户的联系人，带分页 -->
    <select id="onFindAllWithPage" parameterType="map" resultType="entity.Contact">
        SELECT
        <include refid="contactMainColumn"/>
        FROM
        <include refid="tableName"/>
        inner join my_user on contact.userId = my_user.id where contact.userId = #{userId} limit #{startIndex},
        #{count};
    </select>

    <!-- 查询指定用户的所有联系人，不分页 -->
    <select id="findAll" resultType="entity.Contact">
        SELECT
        <include refid="contactMainColumn"/>
        FROM
        <include refid="tableName"/>
        inner join my_user
        on contact.userId = my_user.id
        where contact.userId = #{userId};
    </select>
</mapper>