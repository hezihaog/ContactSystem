<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace属性是名称空间，必须唯一 -->
<mapper namespace="entity.Contact">
    <!-- resultMap标签:映射实体与表
         type属性：表示实体全路径名
         id属性：为实体与表的映射取一个任意的唯一的名字
    -->
    <resultMap id="contactResultMap" type="contact">
        <!-- id标签:映射主键属性
             result标签：映射非主键属性
             property属性:实体的属性名
             column属性：表的字段名
        -->
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="qq" column="qq" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 添加时动态的插入参数 -->
    <sql id="addParams">
        <!-- 去掉最后的逗号 -->
        <trim suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="qq != null">
                qq,
            </if>
        </trim>
    </sql>

    <!-- 添加时动态的插入值 -->
    <sql id="addValues">
        <!-- 去掉最后的逗号 -->
        <trim suffixOverrides=",">
            <if test="name != null">
                #{name},
            </if>
            <if test="gender != null">
                #{gender},
            </if>
            <if test="age != null">
                #{age},
            </if>
            <if test="phone != null">
                #{phone},
            </if>
            <if test="email != null">
                #{email},
            </if>
            <if test="qq != null">
                #{qq},
            </if>
        </trim>
    </sql>

    <!--
        insert标签：要书写insert这么一个sql语句
        id属性：为insert这么一个sql语句取一个任意唯一的名字
        parameterType:要执行的dao中的方法的参数，如果是类的话，必须使用全路径类
    -->
    <insert id="add" parameterType="entity.Contact">
        INSERT INTO contact (<include refid="addParams"/>) VALUES(<include refid="addValues"/>)
    </insert>

    <update id="update" parameterType="map">
        UPDATE contact
        <set>
            <if test="name != null">
                NAME = #{name},
            </if>
            <if test="name != null">
                gender = #{gender},
            </if>
            <if test="name != null">
                age = #{age},
            </if>
            <if test="name != null">
                phone = #{phone},
            </if>
            <if test="name != null">
                email = #{email},
            </if>
            <if test="name != null">
                qq = #{qq},
            </if>
        </set>
        where id = #{id}
    </update>

    <!-- 删除单个id -->
    <delete id="delete" parameterType="string">
		DELETE FROM contact where id = #{id}
	</delete>

    <!-- 删除多个联系人 -->
    <delete id="deleteList">
        delete from contact where id in
        <foreach collection="array" open="(" close=")" separator="," item="ids">
            #{ids}
        </foreach>
    </delete>

    <select id="findById" parameterType="string" resultType="entity.Contact">
        SELECT * FROM contact c WHERE c.id = #{id}
    </select>

    <select id="findByName" parameterType="map" resultType="entity.Contact">
        SELECT * FROM contact c
        <where>
            <if test="contactName != null">
                and c.name = #{contactName}
            </if>
        </where>
    </select>

    <select id="checkIsExist" parameterType="entity.Contact" resultType="int">
        SELECT id FROM contact c WHERE c.name = #{name}
    </select>

    <select id="onFindAllWithPage" parameterType="map" resultType="entity.Contact">
        SELECT * FROM contact limit #{startIndex}, #{count};
    </select>

    <select id="findAll" resultType="entity.Contact">
        SELECT * FROM contact;
    </select>
</mapper>